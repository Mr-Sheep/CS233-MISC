$date
	Wed Aug 23 22:00:11 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module keypad_test $end
$var wire 1 ! valid $end
$var wire 4 " number [3:0] $end
$var wire 7 # inputs [6:0] $end
$var reg 1 $ a $end
$var reg 1 % b $end
$var reg 1 & c $end
$var reg 1 ' d $end
$var reg 1 ( e $end
$var reg 1 ) f $end
$var reg 1 * g $end
$scope module kp $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 & c $end
$var wire 1 ' d $end
$var wire 1 ( e $end
$var wire 1 ) f $end
$var wire 1 * g $end
$var wire 1 + na $end
$var wire 1 , nb $end
$var wire 1 - nc $end
$var wire 1 . nd $end
$var wire 1 / ne $end
$var wire 1 0 nf $end
$var wire 1 1 ng $end
$var wire 1 2 p0 $end
$var wire 1 3 p1 $end
$var wire 1 4 p2 $end
$var wire 1 5 p3 $end
$var wire 1 6 p4 $end
$var wire 1 7 p5 $end
$var wire 1 8 p6 $end
$var wire 1 9 p7 $end
$var wire 1 : p8 $end
$var wire 1 ; p9 $end
$var wire 1 ! valid $end
$var wire 4 < number [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 <
0;
0:
09
08
07
06
05
04
03
02
11
10
1/
1.
1-
1,
1+
0*
0)
0(
0'
0&
0%
0$
b0 #
b0 "
0!
$end
#10
b1 "
b1 <
1!
13
0.
0+
1'
b1001000 #
1$
#20
b10 "
b10 <
14
03
0,
1+
1%
b101000 #
0$
#30
b11 "
b11 <
15
04
0-
1,
1&
b11000 #
0%
#40
b100 "
b100 <
16
05
0/
0+
1.
1-
1(
1$
0'
b1000100 #
0&
#50
b101 "
b101 <
17
06
0,
1+
1%
b100100 #
0$
#60
b110 "
b110 <
18
07
0-
1,
1&
b10100 #
0%
#70
b111 "
b111 <
19
08
00
0+
1/
1-
1)
1$
0(
b1000010 #
0&
#80
b1000 "
b1000 <
1:
09
0,
1+
1%
b100010 #
0$
#90
b1001 "
b1001 <
1;
0:
0-
1,
1&
b10010 #
0%
#100
b1000 "
b1000 <
12
0;
01
0,
10
1-
1*
1%
0)
b100001 #
0&
#110
0!
b0 "
b0 <
02
11
1,
0*
b0 #
0%
#120
