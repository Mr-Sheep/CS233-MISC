$date
	Thu Sep  7 18:43:39 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module chopUpDigits_control_test $end
$var wire 1 ! write $end
$var wire 1 " select_base $end
$var wire 1 # number_is_0 $end
$var wire 1 $ load_number $end
$var wire 1 % load_index $end
$var wire 1 & get_new $end
$var wire 1 ' done $end
$var reg 1 ( base $end
$var reg 1 ) clk $end
$var reg 5 * digits_ptr [4:0] $end
$var reg 1 + go $end
$var reg 32 , number [31:0] $end
$var reg 1 - reset $end
$var integer 32 . i [31:0] $end
$scope module circuit $end
$var wire 1 ) clk $end
$var wire 5 / digits_ptr [4:0] $end
$var wire 32 0 number [31:0] $end
$var wire 1 - reset $end
$var wire 32 1 write_data [31:0] $end
$var wire 1 ! write $end
$var wire 1 " select_base $end
$var wire 1 # number_is_0 $end
$var wire 32 2 mod_8 [31:0] $end
$var wire 32 3 mod_16 [31:0] $end
$var wire 1 $ load_number $end
$var wire 1 % load_index $end
$var wire 1 & get_new $end
$var wire 32 4 div_8 [31:0] $end
$var wire 32 5 div_16 [31:0] $end
$var wire 5 6 digit_ptr_plus_index [4:0] $end
$var reg 5 7 digits_ptr_reg [4:0] $end
$var reg 5 8 index_reg [4:0] $end
$var reg 32 9 number_reg [31:0] $end
$scope module compareNumber $end
$var wire 32 : A [31:0] $end
$var wire 32 ; B [31:0] $end
$var wire 1 < lt $end
$var wire 1 # eq $end
$var parameter 32 = width $end
$upscope $end
$scope module rf $end
$var wire 1 ) clock $end
$var wire 32 > internal_rdData [31:0] $end
$var wire 32 ? rdData [31:0] $end
$var wire 5 @ rdNum [4:0] $end
$var wire 1 - reset $end
$var wire 32 A rsData [31:0] $end
$var wire 5 B rsNum [4:0] $end
$var wire 32 C rtData [31:0] $end
$var wire 5 D rtNum [4:0] $end
$var wire 1 ! rdWriteEnable $end
$var integer 32 E i [31:0] $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 1 ( base $end
$var wire 1 ) clk $end
$var wire 1 ' done $end
$var wire 1 & get_new $end
$var wire 1 + go $end
$var wire 1 % load_index $end
$var wire 1 $ load_number $end
$var wire 1 # number_is_0 $end
$var wire 1 - reset $end
$var wire 1 F sDone_next $end
$var wire 1 G sGarbage_next $end
$var wire 1 H sStart_next $end
$var wire 1 I sWhile16_next $end
$var wire 1 J sWhile8_next $end
$var wire 1 K sWrite16_next $end
$var wire 1 L sWrite8_next $end
$var wire 1 " select_base $end
$var wire 1 M temp_base $end
$var wire 1 N temp_go $end
$var wire 1 ! write $end
$var wire 1 O sWrite8 $end
$var wire 1 P sWrite16 $end
$var wire 1 Q sWhile8 $end
$var wire 1 R sWhile16 $end
$var wire 1 S sStart $end
$var wire 1 T sGarbage $end
$var wire 1 U sDone $end
$scope module fsDone $end
$var wire 1 ) clk $end
$var wire 1 F d $end
$var wire 1 V enable $end
$var wire 1 W reset $end
$var reg 1 U q $end
$upscope $end
$scope module fsGarbage $end
$var wire 1 ) clk $end
$var wire 1 G d $end
$var wire 1 X enable $end
$var wire 1 Y reset $end
$var reg 1 T q $end
$upscope $end
$scope module fsStart $end
$var wire 1 ) clk $end
$var wire 1 H d $end
$var wire 1 Z enable $end
$var wire 1 [ reset $end
$var reg 1 S q $end
$upscope $end
$scope module fsWhile16 $end
$var wire 1 ) clk $end
$var wire 1 I d $end
$var wire 1 \ enable $end
$var wire 1 ] reset $end
$var reg 1 R q $end
$upscope $end
$scope module fsWhile8 $end
$var wire 1 ) clk $end
$var wire 1 J d $end
$var wire 1 ^ enable $end
$var wire 1 _ reset $end
$var reg 1 Q q $end
$upscope $end
$scope module fsWrite16 $end
$var wire 1 ) clk $end
$var wire 1 K d $end
$var wire 1 ` enable $end
$var wire 1 a reset $end
$var reg 1 P q $end
$upscope $end
$scope module fsWrite8 $end
$var wire 1 ) clk $end
$var wire 1 L d $end
$var wire 1 b enable $end
$var wire 1 c reset $end
$var reg 1 O q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 =
$end
#0
$dumpvars
0c
1b
0a
1`
0_
1^
0]
1\
0[
1Z
0Y
1X
0W
1V
xU
xT
xS
xR
xQ
xP
xO
0N
xM
0L
0K
0J
0I
0H
1G
0F
b100000 E
bz D
bx C
bz B
bx A
bx @
b0xxxx ?
bx >
x<
b0 ;
bx :
bx 9
bx 8
bx 7
bx 6
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
b0xxxx 3
b0xxx 2
b0xxxx 1
bx 0
bx /
bx .
1-
bx ,
0+
bx *
0)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#1
b0 1
b0 ?
0%
0$
b0 4
b0 2
b0 5
b0 3
0!
b0 6
b0 @
b0 8
b0 7
0<
1#
b0 9
b0 :
1T
0&
0S
0Q
0R
0O
0P
0'
0U
1)
b0xxxx >
#2
b0 >
0)
b100000 .
0-
#3
1)
#4
1H
0G
0)
0"
0M
0(
b1111 *
b1111 /
b0 ,
b0 0
1N
1+
#5
1%
1$
0T
1&
1S
1)
#6
1J
0H
0)
0N
0+
#7
1F
0J
0%
0$
1Q
0&
0S
b1111 6
b1111 @
b1111 7
1)
#8
0)
#9
0Q
1'
1U
1)
#10
0)
#11
1)
#12
0)
#13
1)
#14
0)
#15
1)
#16
0)
#17
1)
#18
0)
#19
1)
#20
0)
#21
1)
#22
0)
#23
1)
#24
0)
#25
1)
#26
0)
b10111 .
#27
1)
#28
0)
b100000 .
#29
1)
#30
0F
1H
0)
1"
1M
1(
b10010001101000000 ,
b10010001101000000 0
1N
1+
#31
1%
1$
0'
0U
1&
1S
1)
#32
0H
b100000 E
1G
0)
1-
0N
0+
#33
0%
0$
b0 6
b0 @
b0 7
1T
0&
0S
1)
#34
0)
0-
#35
1)
#36
0)
#37
1)
#38
0)
#39
1)
#40
0)
#41
1)
#42
0)
#43
1)
#44
0)
#45
1)
#46
0)
#47
1)
#48
0)
#49
1)
#50
0)
#51
1)
#52
0)
#53
1)
#54
0)
#55
1)
#56
0)
#57
1)
#58
0)
#59
1)
#60
0)
#61
1)
#62
0)
#63
1)
#64
0)
#65
1)
#66
0)
#67
1)
#68
0)
#69
1)
#70
0)
#71
1)
#72
0)
#73
1)
#74
0)
#75
1)
#76
0)
#77
1)
#78
0)
#79
1)
#80
0)
#81
1)
#82
0)
#83
1)
#84
0)
#85
1)
#86
0)
#87
1)
#88
0)
#89
1)
#90
0)
#91
1)
#92
0)
#93
1)
#94
0)
#95
1)
#96
0)
#97
1)
#98
0)
#99
1)
#100
0)
#101
1)
#102
0)
#103
1)
#104
0)
#105
1)
#106
0)
#107
1)
#108
0)
#109
1)
#110
0)
#111
1)
#112
0)
#113
1)
#114
0)
#115
1)
#116
0)
#117
1)
#118
0)
#119
1)
#120
0)
#121
1)
#122
0)
#123
1)
#124
0)
#125
1)
#126
0)
#127
1)
#128
0)
#129
1)
#130
0)
#131
1)
#132
0)
#133
1)
#134
0)
b10111 .
#135
1)
#136
0)
b100000 .
#137
1)
#138
b100000 E
0)
1-
b100100011010001010110 ,
b100100011010001010110 0
1N
1+
#139
1)
#140
0)
b100100010001000100110 ,
b100100010001000100110 0
#141
1)
#142
0)
#143
1)
#144
0)
#145
1)
#146
0)
#147
1)
#148
0)
#149
1)
#150
0)
#151
1)
#152
0)
#153
1)
#154
0)
#155
1)
#156
0)
#157
1)
#158
0)
#159
1)
#160
0)
#161
1)
#162
0)
#163
1)
#164
0)
#165
1)
#166
0)
#167
1)
#168
0)
#169
1)
#170
0)
#171
1)
#172
0)
#173
1)
#174
0)
#175
1)
#176
0)
#177
1)
#178
0)
#179
1)
#180
0)
#181
1)
#182
0)
#183
1)
#184
0)
#185
1)
#186
0)
#187
1)
#188
0)
#189
1)
#190
0)
#191
1)
#192
0)
#193
1)
#194
0)
#195
1)
#196
0)
#197
1)
#198
0)
#199
1)
#200
0)
#201
1)
#202
0)
#203
1)
#204
0)
#205
1)
#206
0)
#207
1)
#208
0)
#209
1)
#210
0)
#211
1)
#212
0)
#213
1)
#214
0)
#215
1)
#216
0)
#217
1)
#218
0)
#219
1)
#220
0)
#221
1)
#222
0)
#223
1)
#224
0)
#225
1)
#226
0)
#227
1)
#228
0)
#229
1)
#230
0)
#231
1)
#232
0)
#233
1)
#234
0)
#235
1)
#236
0)
#237
1)
#238
0)
#239
1)
#240
0)
b10111 .
#241
1)
#242
0)
b100000 .
#243
1)
#244
0)
b101011001111000100100010010 ,
b101011001111000100100010010 0
#245
1)
#246
0)
0N
0+
#247
1)
#248
0)
0"
0M
0(
#249
1)
#250
0)
#251
1)
#252
0)
#253
1)
#254
0)
#255
1)
#256
0)
#257
1)
#258
0)
#259
1)
#260
0)
#261
1)
#262
0)
#263
1)
#264
0)
#265
1)
#266
0)
#267
1)
#268
0)
#269
1)
#270
0)
#271
1)
#272
0)
#273
1)
#274
0)
#275
1)
#276
0)
#277
1)
#278
0)
#279
1)
#280
0)
#281
1)
#282
0)
#283
1)
#284
0)
#285
1)
#286
0)
#287
1)
#288
0)
#289
1)
#290
0)
#291
1)
#292
0)
#293
1)
#294
0)
#295
1)
#296
0)
#297
1)
#298
0)
#299
1)
#300
0)
#301
1)
#302
0)
#303
1)
#304
0)
#305
1)
#306
0)
#307
1)
#308
0)
#309
1)
#310
0)
#311
1)
#312
0)
#313
1)
#314
0)
#315
1)
#316
0)
#317
1)
#318
0)
#319
1)
#320
0)
#321
1)
#322
0)
#323
1)
#324
0)
#325
1)
#326
0)
#327
1)
#328
0)
#329
1)
#330
0)
#331
1)
#332
0)
#333
1)
#334
0)
#335
1)
#336
0)
#337
1)
#338
0)
#339
1)
#340
0)
#341
1)
#342
0)
#343
1)
#344
0)
#345
1)
#346
0)
#347
1)
#348
0)
b11010 .
#349
1)
#350
0)
#351
1)
#352
0)
#353
1)
#354
0)
#355
1)
#356
0)
#357
1)
#358
0)
